- get OCR working faster/more reliably; currently the conversion from PDF to 300dpi TIFF and then running tesseract on the result takes about 6.8s per page.

- options:
  - MonolithicPdfReader: allow control of numNonHeadersAllowedAtTop
  - allow control of verbosity in readers and writers so you can diagnose problems
    (and allow user to view logs in a non-dev build)

- MultiplePdfReader without OCR doesn't write anything in the tmp directory, and it writes JSON files directly into
  the directory with the files.  That's *probably* OK; it's definitely faster and lighter on disk usage.  But it's 
  different from all the other modes (monolithic+ocr, monolithic no-ocr, multiple+ocr)

- UI improvements:
  - if you mistakenly process an image-only PDF without OCR checked, you can't go back and just check OCR; the
    system will avoid re-processing the PDF.  It needs to check whether the user has the same options selected,
    not just using the filename and the file's modtime
  - with OCR on, the UI locks up pretty badly when it starts processing the first PDF; we need to at least allow
    for the stepper to transition and the progress overlay to come up

- cleanup of tmp directories (/var/folders/ts/2byct4k90h5fcwcl8bn3pht40000gn/T/mailshredder on my mac)

- filter options:
  - undo selection change (in case you accidentally hit "select all" after painstakingly selecting lots of
    individual emails)
  - make "select all" and "select none" respect the current filter  
  - force table to show "all" -- tried this, but it breaks the layout

- support for other input types:
  - eml
  - pst
  - PDF portfolio

- concept of a "project" -- let you re-open an existing project and manipulate the selection and re-export

- upload error handling so you can retry failed uploads -- very important for large document sets

- MultiplePdfReader - handle documents with no email at all (like some random text docs that got thrown into the mix)

- parallel uploads to DocumentCloud

- saving credentials for convenience

- case insensitivity when parsing out headers?

- report: maybe output senders by pages of email as well as just numbers of messages

- report: how to make it super easy to open the TXT files in a spreadsheet?

- handle situation where embedded email headers start at the top of the page (somehow identify that these are not starting a new email)
